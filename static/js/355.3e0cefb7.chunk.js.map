{"version":3,"file":"static/js/355.3e0cefb7.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","components/PageTransitionWrapper.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (jsx(Fragment, { children: childrenToRender.map((child) => (jsx(PresenceChild, { isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)))) }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (jsx(PresenceChild, { isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (jsx(PresenceChild, { isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (jsx(Fragment, { children: exitingChildren.size\n            ? childrenToRender\n            : childrenToRender.map((child) => cloneElement(child)) }));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n// import '../css/PageTransitions.css'\nimport styled from \"styled-components\";\n\nconst variants = {\n    home: {\n        initial: { opacity: 0, y: 300 },\n        animate: { opacity: 1, y: 0 },\n        exit: { opacity: 0, y: -300 },\n        transition: { duration: 0.5, ease: \"easeInOut\" },\n    },\n    about: {\n        initial: { opacity: 0, x: -300 },\n        animate: { opacity: 1, x: 0 },\n        exit: { opacity: 0, x: 300 },\n        transition: { duration: 0.5, ease: \"easeInOut\" },\n    },\n    skills: {\n        initial: { opacity: 0, scale: 0 },\n        animate: { opacity: 1, scale: 1 },\n        exit: { opacity: 0, scale: 0 },\n        transition: { duration: 0.5, ease: \"easeInOut\" },\n    },\n    education: {\n        initial: { x: \"100vw\" },\n        animate: { x: 0 },\n        exit: { x: \"-100vw\" },\n        transition: { duration: 0.5, ease: \"easeInOut\" },\n    },\n    experience: {\n        initial: { scale: 1.5 },\n        animate: { scale: 1 },\n        exit: { scale: 0.5 },\n        transition: { duration: 0.5, ease: \"easeInOut\" },\n    },\n    projects: {\n        initial: { rotate: 90 },\n        animate: { rotate: 0 },\n        exit: { rotate: -90 },\n        transition: { duration: 0.5, ease: \"easeInOut\" },\n    },\n};\n\n// Define my styled component outside of the render function\nconst StyledMotionDiv = styled(motion.div)`\n  height: 100%;  // Ensure the div takes full height of the parent\n  display: flex; // Using flex to center children\n  flexDirection: column; // Align children vertically\n  justifyContent: 'center'; // Center children vertically\n  alignItems: 'center'; // Center children horizontally\n`;\n\nconst PageTransitionWrapper = ({ children, pageKey }) => {\n    return (\n        <AnimatePresence mode='wait'>\n            <StyledMotionDiv\n                key={pageKey}\n                variants={variants[pageKey]}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n            >\n                {children}\n            </StyledMotionDiv>\n        </AnimatePresence>\n    );\n};\n\nexport default PageTransitionWrapper;\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","Fragment","map","undefined","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","variants","home","opacity","y","animate","exit","transition","duration","ease","about","x","skills","scale","education","experience","projects","rotate","StyledMotionDiv","styled","motion","div","_templateObject","_taggedTemplateLiteral","pageKey","_jsx"],"sourceRoot":""}